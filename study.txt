[npm]
 --save : 의존성 설치

미들웨어는 일반미들웨어와 에러미들웨어가 있다.

morgan
써드파티미들웨어 / 다른 놈들이 미들웨어를 어떻게 쓰는가

[라우팅]
- 요청 url에 대해 적절한 핸들러 함수로 연결해 주는 기능을 라우팅이라고 부른다.
- 어플리케이션의 get(), post() 메소드로 구현할 수 있다.]
- 라우팅을 위한 전용 Router 클래스를 사용할 수도 있다.


[요청 객체]
- 클라이언트의 요청 정보를 담은 객체를 요청객체라고 한다.
- http 모듈의 request 객체를 래핑한것이다.
- req.params(), req.query(), req.body() 메소드를 주요 사용한다.


[응답객체]
- 클라이언트 응답 정보를 담은 객체를 응답객체라고 한다.
- http 모듈의 response 객체를 래핑한 것이다.
- res.send(), res.status(), res.json() 메소드를 주로 사용한다.

[http 요청]
- 모든 자원은 명사로 식별한다.
- http 경로로 자원을 요청한다.

[http 메서드]
- 서버 자원에 대한 행동을 나타낸다.
 -GET : 자원을 조회
 -POST : 자원을 생성
 -PUT: 자원을 갱신
 -DELETE : 자원을 삭제
- 이는 익스프레스 어플리케이션의 메소드로 구현되어 있다.


[http 상태코드]
- 1xx: 아직 처리중
- 2xx : 자, 여기 있어!
- 3xx : 잘가~
- 4xx : 니가 문제임
- 5xx : 내가 문제임

- 200 : 성공(success), GET, PUT
- 201 : 작성됨(created), POST
- 204 : 내용 없음 (No Conent), DELETE
- 400 : 잘못된 요청 (Bad request)
- 401 : 권한 없음(Unauthorized)
- 404 : 찾을 수 없음(Not found)
- 409 : 충돌(Conflict) 자원이 있는데 또 생성하려고할때
- 500 : 서버 에러(Interel server error)

[테스트 주도 개발]
- 테스트코드를 먼저 작성함
- 개발시간이 많이 걸림
- TDD로 개발하자!
- mocha, should, superTest

[Mocha]
- 모카는 테스트 코드를 돌려주는 테스트 러너
- 테스트 수트: 테스트 환경에서 모카에서는 describe()으로 구현한다.
- 테스트 케이스 : 실제 테스트를 말하며 모카에서는 it()으로 구현한다.

npm i mocha --save-dev

node_modules/.bin/ 이동후 mocha ../../utils.spec.js

[should]
- 노트 assert 말고 서드파티 라이브러리를 사용하라.
- 슈드는 검증(assertion) 라이브러리다.
- 가독성 높은 테스트 코드를 만들 수 있다.

npm i should --save-dev

[SuperTest]
- 단위 테스트 : 함수의 기능 테스트
- 통합 테스트 : API의 기능 테스트
- 슈퍼 테스트는 익스프레스 통합 테스트용 라이브러리다.
- 내부적으로 익스프레스 서버를 구동시켜 실제 요청을 보낸 뒤 결과를 검증한다.

[첫 api 테스트 만들기]
- 성공
   -유저 객체를 담은 배열로 응답한다.
   -최대 limit 갯수만큼 응답한다.
- 실패
   -limit이 숫자형이 아니면 400을 응답한다.
   -offset이 숫자형이 아니면 400을 응답한다.